{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNsD;AACwC;AACnB;AACvC;AAAA;AAEpCA,oEAAiB,CAAEO,6CAAa,EAAE;EAE9BQ,IAAI,EAAGC,KAAK,IAAK;IACb;IACA,MAAM;MAAEC,UAAU;MAAEC;IAAc,CAAC,GAAGF,KAAK;IAE3CG,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;IACvB,oBACIN,uDAAA,CAAAE,uDAAA;MAAAQ,QAAA,gBACIZ,sDAAA,CAACJ,sEAAiB;QAAAgB,QAAA,eACdV,uDAAA,CAACR,4DAAS;UAACmB,KAAK,EAAE,iBAAkB;UAAAD,QAAA,gBAChCZ,sDAAA,CAACL,8DAAW;YACRmB,KAAK,EAAE,0BAA2B;YAClCC,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAER,UAAU,CAACS,YAAa;YAC/BC,QAAQ,EAAGC,GAAG,IAAKV,aAAa,CAAC;cAAEQ,YAAY,EAAEG,QAAQ,CAACD,GAAG;YAAE,CAAC;UAAE,CACrE,CAAC,eACFnB,sDAAA,CAACR,gEAAa;YACV6B,OAAO,EAAE,CAAC,CAACb,UAAU,CAACc,iBAAkB;YACxCR,KAAK,EAAE,2BAA4B;YACnCI,QAAQ,EAAEA,CAAA,KACNT,aAAa,CAAC;cACVa,iBAAiB,EAAE,CAACd,UAAU,CAACc;YACnC,CAAC;UACJ,CACJ,CAAC,eACFtB,sDAAA,CAACP,gEAAa;YACVqB,KAAK,EAAC,yBAAyB;YAC/BE,KAAK,EAAE,CAACR,UAAU,CAACe,UAAU,CAAE;YAC/BC,OAAO,EAAE,CACL;cAACV,KAAK,EAAE,UAAU;cAAEE,KAAK,EAAE;YAAU,CAAC,EACtC;cAACF,KAAK,EAAE,UAAU;cAAEE,KAAK,EAAE;YAAU,CAAC,EACtC;cAACF,KAAK,EAAE,QAAQ;cAAEE,KAAK,EAAE;YAAQ,CAAC,CACpC;YACFE,QAAQ,EAAGO,OAAO,IAAKhB,aAAa,CAAC;cAACc,UAAU,EAAEE;YAAO,CAAC;UAAE,CAC/D,CAAC;QAAA,CACK;MAAC,CACG,CAAC,eACpBvB,uDAAA;QAAA,GAASL,sEAAa,CAAC,CAAC;QAAAe,QAAA,gBACrBZ,sDAAA;UAAAY,QAAA,EAAOJ,UAAU,CAACc,iBAAiB,GAAG,kBAAkB,GAAG;QAAoB,CAAM,CAAC,eACrFtB,sDAAA;UAAAY,QAAA,EAAOJ,UAAU,CAACe,UAAU,GAAG,eAAe,GAAGf,UAAU,CAACe,UAAU,GAAG;QAAE,CAAM,CAAC,eAClFvB,sDAAA;UAAAY,QAAA,EAAO,4BAA4B,GAAGJ,UAAU,CAACS;QAAY,CAAO,CAAC;MAAA,CACpE,CAAC;IAAA,CACR,CAAC;EAEX,CAAC;EAEDS,IAAI,EAAEA,CAAA,KAAM;IACR,OAAO,IAAI;EACf;AACJ,CAAC,CAAC,C","sources":["webpack://noob/external window [\"wp\",\"blockEditor\"]","webpack://noob/external window [\"wp\",\"blocks\"]","webpack://noob/external window [\"wp\",\"components\"]","webpack://noob/external window \"ReactJSXRuntime\"","webpack://noob/webpack/bootstrap","webpack://noob/webpack/runtime/compat get default export","webpack://noob/webpack/runtime/define property getters","webpack://noob/webpack/runtime/hasOwnProperty shorthand","webpack://noob/webpack/runtime/make namespace object","webpack://noob/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { ToggleControl, SelectControl, PanelBody, TextControl  } from '@wordpress/components';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport metadata from './block.json';\n\nregisterBlockType( metadata.name, {\n\n    edit: (props) => {\n        // Destructure your attributes from block.json here so you can call them by name\n        const { attributes, setAttributes } = props;\n\n        console.log(attributes);\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody title={\"Slider settings\"}>\n                        <TextControl\n                            label={\"Number of slides to show\"}\n                            type=\"number\"\n                            value={attributes.numberSlides}\n                            onChange={(num) => setAttributes({ numberSlides: parseInt(num) })}\n                        />\n                        <ToggleControl\n                            checked={!!attributes.directionVertical}\n                            label={\"Display slider vertically\"}\n                            onChange={() =>\n                                setAttributes({\n                                    directionVertical: !attributes.directionVertical,\n                                })\n                            }\n                        />\n                        <SelectControl\n                            label=\"Choose your slider type\"\n                            value={[attributes.sliderType]}\n                            options={[\n                                {label: 'Speakers', value: 'speakers'},\n                                {label: 'Sponsors', value: 'sponsors'},\n                                {label: 'Custom', value: 'custom'},\n                            ]}\n                            onChange={(newType) => setAttributes({sliderType: newType})}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <div {...useBlockProps()}>\n                   <div>{ attributes.directionVertical ? \"Vertical display\" : \"Horizontal display\"}</div>\n                    <div>{ attributes.sliderType ? \"Slider type: \" + attributes.sliderType : \"\"}</div>\n                    <div>{ \"number of slides to show: \" + attributes.numberSlides }</div>\n                </div>\n            </>\n        );\n    },\n\n    save: () => {\n        return null;\n    },\n});"],"names":["registerBlockType","ToggleControl","SelectControl","PanelBody","TextControl","InspectorControls","useBlockProps","metadata","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","name","edit","props","attributes","setAttributes","console","log","children","title","label","type","value","numberSlides","onChange","num","parseInt","checked","directionVertical","sliderType","options","newType","save"],"sourceRoot":""}